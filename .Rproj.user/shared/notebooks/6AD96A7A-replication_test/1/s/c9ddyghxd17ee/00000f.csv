"0","# --- INTENT: Replicate Figure 3 using iterative mediate() calls ---"
"0","# message(""Figure 3 - Mediation time! Running 1000 simulations... go grab a coffee, this might take a while. Or maybe it'll crash. â˜• / ðŸ’¥"")"
"0","message(""Running Figure 3 mediation analysis..."")"
"0",""
"0","# Load necessary libraries (Moved to setup chunk)"
"0","# library(mediation)"
"0","# library(Hmisc)"
"0","# library(tidyverse)"
"0","# library(RColorBrewer)"
"0",""
"0","# Define base mediator names (without wave suffix)"
"0","mediators_base <- Cs(self.suff, efficacy, placeat)"
"0",""
"0","# Define confounding variables (covariates)"
"0","confounders <- Cs(age, educ, male, bs.exp.now, bs.exp.past, Score)"
"0",""
"0","# Treatment variable"
"0","treatment <- ""treat.dum"""
"0",""
"0","# Create consistent color palette with Figure 2"
"0","color_palette <- c(""#2b8cbe"", ""#e66101"") # Professional blue and orange"
"0","pd <- position_dodge(width = 0.3) "
"0",""
"0","# Initialize an empty list to store results from each mediate() call"
"0","results_list <- list()"
"0",""
"0","# --- Loop through each mediator and each wave --- "
"0","for (med_base in mediators_base) {"
"0","  for (wave_num in c(2, 3)) {"
"0","    "
"0","    # Define wave-specific variables"
"0","    wave_label <- paste0(""Wave "", wave_num)"
"0","    outcome_var <- paste0(""mg.asp_w"", wave_num)"
"0","    mediator_var <- paste0(med_base, ""_w"", wave_num)"
"0","    weight_var <- paste0(""wt"", wave_num)"
"0","    nonmissing_var <- paste0(""nonmissing"", wave_num)"
"0","    wave_time_label <- ifelse(wave_num == 2, ""Short-term (Wave 2)"", ""Long-term (Wave 3)"")"
"0",""
"0","    # Check if required base data exists"
"0","    if (!exists(""mig_wide"")) {"
"0","      stop(""Error: mig_wide not found. Please ensure setup chunk has run."")"
"0","    }"
"0","    "
"0","    # Prepare data for this specific mediator/wave using proper nonmissing filter"
"0","    data_wave_df <- as.data.frame(subset(mig_wide, mig_wide[[nonmissing_var]] == TRUE))"
"0","    required_cols <- c(outcome_var, mediator_var, treatment, confounders, weight_var)"
"0","    missing_cols <- setdiff(required_cols, names(data_wave_df))"
"0","    "
"0","    if (length(missing_cols) > 0) {"
"0","      next # Skip to next iteration"
"0","    }"
"0","    "
"0","    # Filter for complete cases"
"0","    complete_cases_data <- data_wave_df[complete.cases(data_wave_df[, required_cols]), ]"
"0","    n_complete <- nrow(complete_cases_data)"
"0","    "
"0","    # Skip if insufficient data"
"0","    if (n_complete < 30) {"
"0","      next "
"0","    }"
"0","    "
"0","    # Fit Mediator Model"
"0","    med_formula_str <- paste(mediator_var, ""~"", treatment, ""+"", paste(confounders, collapse="" + ""))"
"0","    med_model <- tryCatch({"
"0","      lm(as.formula(med_formula_str), "
"0","         data = complete_cases_data, "
"0","         weights = complete_cases_data[[weight_var]])"
"0","    }, error = function(e) {"
"0","      return(NULL)"
"0","    })"
"0","    "
"0","    if (is.null(med_model)) next"
"0",""
"0","    # Fit Outcome Model"
"0","    out_formula_str <- paste(outcome_var, ""~"", treatment, ""*"", mediator_var, ""+"", paste(confounders, collapse="" + ""))"
"0","    out_model <- tryCatch({"
"0","      lm(as.formula(out_formula_str), "
"0","         data = complete_cases_data, "
"0","         weights = complete_cases_data[[weight_var]])"
"0","    }, error = function(e) {"
"0","      return(NULL)"
"0","    })"
"0","    "
"0","    if (is.null(out_model)) next"
"0",""
"0","    # Run Mediation"
"0","    mediation_result <- tryCatch({"
"0","      mediate(med_model, out_model, "
"0","              treat = treatment, "
"0","              mediator = mediator_var, "
"0","              sims = 1000)"
"0","    }, error = function(e) {"
"0","      return(NULL)"
"0","    })"
"0",""
"0","    # Extract Results if successful"
"0","    if (!is.null(mediation_result)) {"
"0","      summary_med <- summary(mediation_result)"
"0","      "
"0","      # Extract ACME values"
"0","      if (!is.null(summary_med$d.avg) && length(summary_med$d.avg) == 1 && is.numeric(summary_med$d.avg) &&"
"0","          !is.null(summary_med$d.avg.ci) && length(summary_med$d.avg.ci) == 2 && is.numeric(summary_med$d.avg.ci)) {"
"0","          "
"0","          estimate_val <- summary_med$d.avg"
"0","          conf_low_val <- summary_med$d.avg.ci[1]"
"0","          conf_high_val <- summary_med$d.avg.ci[2]"
"0","          "
"0","          if (!is.null(estimate_val) && !is.null(conf_low_val) && !is.null(conf_high_val)) {"
"0","              results_list[[length(results_list) + 1]] <- data.frame("
"0","                mediator = med_base,"
"0","                estimate = estimate_val, "
"0","                conf_low = conf_low_val,"
"0","                conf_high = conf_high_val,"
"0","                wave = wave_time_label,"
"0","                stringsAsFactors = FALSE"
"0","              )"
"0","           }"
"0","      }"
"0","    }"
"0","  }"
"0","}"
"0",""
"0","# --- Combine and Plot Results --- "
"0","if (length(results_list) > 0) {"
"0","  all_med_results <- bind_rows(results_list)"
"0","  "
"0","  # Create mapping from variable names to nicer labels"
"0","  mediator_labels <- c("
"0","    ""self.suff"" = ""Self-sufficiency"","
"0","    ""efficacy"" = ""Personal efficacy"","
"0","    ""placeat"" = ""Financial success at home"""
"0","  )"
"0","  "
"0","  # Order for y-axis (from top to bottom)"
"0","  ordered_labels <- c("
"0","    ""Financial success at home"","
"0","    ""Personal efficacy"","
"0","    ""Self-sufficiency"""
"0","  )"
"0","  "
"0","  # Process results for plotting"
"0","  plot_data <- all_med_results %>%"
"0","    mutate("
"0","      mediator_label = factor(mediator_labels[mediator], levels = ordered_labels) "
"0","    ) %>% "
"0","    filter(!is.na(mediator_label))"
"0","  "
"0","  if (nrow(plot_data) > 0) {"
"0","      # Create the plot with the same clean style as Figure 2"
"0","      fig3_plot <- ggplot(plot_data, "
"0","                         aes(x = estimate, y = mediator_label, "
"0","                             color = wave, shape = wave)) +"
"0","        # Use basic theme"
"0","        theme_bw() +"
"0","        "
"0","        # Reference line at zero"
"0","        geom_vline(xintercept = 0, linetype = ""dashed"", color = ""grey60"", linewidth = 0.7) +"
"0","        "
"0","        # Error bars and points"
"0","        geom_errorbarh(aes(xmin = conf_low, xmax = conf_high), "
"0","                      height = 0.2, position = pd, linewidth = 0.8) +"
"0","        geom_point(position = pd, size = 3, stroke = 1.2) +"
"0","        "
"0","        # Colors and shapes"
"0","        scale_color_manual(values = color_palette, name = ""Time Point"") +"
"0","        scale_shape_manual(values = c(""Short-term (Wave 2)"" = 16, ""Long-term (Wave 3)"" = 1), "
"0","                          name = ""Time Point"") +"
"0","        "
"0","        # Simple labels"
"0","        labs("
"0","          title = ""Figure 3: Average Causal Mediation Effects (ACME)"","
"0","          subtitle = ""Iterative 'mediate' estimates (1000 simulations) with 95% CIs"","
"0","          x = ""Average Causal Mediation Effect (ACME)"","
"0","          y = NULL"
"0","        ) +"
"0","        "
"0","        # Minimal theme"
"0","        theme("
"0","          # Text elements"
"0","          plot.title = element_text(face = ""bold"", size = 12, hjust = 0.5),"
"0","          plot.subtitle = element_text(size = 10, hjust = 0.5),"
"0","          axis.title.x = element_text(size = 10),"
"0","          axis.text.y = element_text(hjust = 1, face = ""bold""),"
"0","          "
"0","          # Legend"
"0","          legend.position = ""top"","
"0","          legend.box = ""horizontal"","
"0","          legend.title = element_text(face = ""bold""),"
"0","          "
"0","          # Panel"
"0","          panel.grid.major.y = element_blank(),"
"0","          panel.grid.minor = element_blank()"
"0","        ) +"
"0","        "
"0","        # Appropriate x-axis limits"
"0","        coord_cartesian(xlim = c(-0.15, 0.15))"
"0","      "
"0","      # Save and display the plot"
"0","      ggsave(""figure3.pdf"", plot = fig3_plot, width = 6.5, height = 4.5, device = ""pdf"", dpi = 300)"
"0","      print(fig3_plot)"
"0","  } else {"
"0","      # message(""Plotting skipped: No valid data after processing results."") # Commented out"
"0","  }"
"0","} else {"
"0","  # message(""Plotting skipped: No successful mediation results were obtained from any mediator/wave combination."") # Commented out"
"0","}"
