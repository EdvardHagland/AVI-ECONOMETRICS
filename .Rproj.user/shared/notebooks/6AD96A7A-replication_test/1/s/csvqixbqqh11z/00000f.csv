"0","# --- INTENT: Generate histograms for key baseline and outcome variables. ---"
"0","# --- EFFECT: Creates several ggplot histograms to visualize data distributions. ---"
"0","message(""Generating initial data inspection histograms..."")"
"0",""
"0","# Load ggplot2 explicitly if not already done (covered in setup)"
"0","# library(ggplot2)"
"0","# library(dplyr) # For data manipulation"
"0",""
"0","# 1. Age Distribution (from mig_wide)"
"0","plot_age <- ggplot(mig_wide, aes(x = age)) +"
"0","  geom_histogram(binwidth = 2, fill = ""#6baed6"", color = ""white"", alpha = 0.8) +"
"0","  labs(title = ""Distribution of Participant Age at Baseline"","
"0","       x = ""Age"","
"0","       y = ""Frequency"") +"
"0","  theme_minimal() +"
"0","  theme(plot.title = element_text(hjust = 0.5))"
"0",""
"0","# 2. Eligibility Score Distribution (from mig_wide)"
"0","plot_score <- ggplot(mig_wide, aes(x = Score)) +"
"0","  geom_histogram(binwidth = 1, fill = ""#74c476"", color = ""white"", alpha = 0.8) +"
"0","  labs(title = ""Distribution of Eligibility Score"","
"0","       x = ""Eligibility Score"","
"0","       y = ""Frequency"") +"
"0","  theme_minimal() +"
"0","  theme(plot.title = element_text(hjust = 0.5))"
"0",""
"0","# 3. Migration Aspiration Distribution Over Time (using mig_long)"
"0","# Ensure mig_long exists and has the required columns"
"0","if (exists(""mig_long"") && all(c(""mg.asp"", ""wave"", ""treat.dum"") %in% names(mig_long))) {"
"0","  "
"0","  # Prepare data: Add descriptive labels for wave and treatment"
"0","  plot_data_mgasp <- mig_long %>%"
"0","    mutate("
"0","      Wave = factor(paste(""Wave"", wave)),"
"0","      Treatment = factor(treat.dum, levels = c(0, 1), labels = c(""Control"", ""Treatment""))"
"0","    ) %>%"
"0","    filter(!is.na(mg.asp)) # Remove NAs for plotting"
"0",""
"0","  plot_mgasp_time <- ggplot(plot_data_mgasp, aes(x = mg.asp)) +"
"0","    # Use geom_bar for discrete/ordinal data, position=""dodge"" to compare T/C"
"0","    geom_bar(aes(fill = Treatment), position = position_dodge(preserve = ""single""), alpha = 0.8, color = ""white"") + "
"0","    facet_wrap(~ Wave, ncol = 1) + # Facet by wave"
"0","    scale_fill_brewer(palette = ""Paired"") + # Color scheme for T/C"
"0","    labs(title = ""Distribution of Migration Aspiration (mg.asp)"","
"0","         subtitle = ""Faceted by Wave and Treatment Group"","
"0","         x = ""Migration Aspiration (1=Low, 5=High)"","
"0","         y = ""Count"") +"
"0","    theme_minimal(base_size = 10) + # Smaller base font size"
"0","    theme("
"0","      plot.title = element_text(hjust = 0.5, face = ""bold""),"
"0","      plot.subtitle = element_text(hjust = 0.5),"
"0","      strip.text = element_text(face = ""bold""), # Bold facet titles"
"0","      legend.position = ""top"" # Move legend"
"0","    ) +"
"0","    scale_x_continuous(breaks = 1:5) # Ensure x-axis shows integer levels 1-5"
"0",""
"0","  # Print the plots"
"0","  print(plot_age)"
"0","  print(plot_score)"
"0","  print(plot_mgasp_time)"
"0",""
"0","} else {"
"0","  message(""Skipping migration aspiration histogram: 'mig_long' not found or missing required columns."")"
"0","  # Still print age and score plots if mig_wide exists"
"0","  if (exists(""mig_wide"") && all(c(""age"", ""Score"") %in% names(mig_wide))) {"
"0","    print(plot_age)"
"0","    print(plot_score)"
"0","  } else {"
"0","     message(""Skipping age/score histograms: 'mig_wide' not found or missing required columns."")"
"0","  }"
"0","}"
"0",""
