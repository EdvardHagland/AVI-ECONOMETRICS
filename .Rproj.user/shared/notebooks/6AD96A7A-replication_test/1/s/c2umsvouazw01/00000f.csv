"0","# --- INTENT: Replicate Table 1 using the vtable::st function as in the original script. ---"
"0","# --- EFFECT: This chunk selects the necessary columns, defines labels, and calls vtable::st to generate the table, letting st handle weighting and tests internally. ---"
"0",""
"0","# Load necessary libraries (already in setup: tidyverse, vtable)"
"0","# library(dplyr)"
"0","# library(vtable)"
"0",""
"0","# --- INTENT: Prepare the data exactly as in the original Table 1 script. ---"
"0","# --- EFFECT: Creates factor for treatment and selects only the required columns without row filtering. ---"
"0","# Prepare the data (Create factor for treatment)"
"0","mig_wide_for_vt <- mig_wide %>% # Use a distinct name to avoid conflict if mig_business used elsewhere"
"0","  mutate(treat.dum_fac = factor(treat.dum, levels = c(0, 1), labels = c(""Control"", ""Treatment"")))"
"0",""
"0","# Select only needed columns for vtable (NO ROW FILTERING here)"
"0","mig_business_vt <- mig_wide_for_vt %>% # Renamed to avoid potential conflicts"
"0","  dplyr::select(bus.location, bus.open, bus.purchases, bus.hire, bus.profit, bus.close,"
"0","                treat.dum_fac, wt3)"
"0",""
"0","# --- INTENT: Define the labels for the table rows. ---"
"0","# Business outcome variable labels"
"0","business_labs <- c("
"0","    ""Selected location"", ""Opened business"", ""Made purchases"","
"0","    ""Hired employees"", ""Made profit"", ""Closed business"""
"0",")"
"0",""
"0","# --- INTENT: Generate Table 1 using vtable::st with original parameters. ---"
"0","# --- EFFECT: Calls st() which calculates weighted means, performs group tests, and formats the output."
"0","# Note: factor.numeric=T treats the 0/1 business outcomes numerically for mean calculation."
"0","# Note: group.weights specifies the weighting column."
"0","st(mig_business_vt,"
"0","   summ = list(c('mean(x)*100')), # Calculate mean and multiply by 100 for percentage"
"0","   summ.names = list(c('%')),      # Label the column '%'"
"0","   group = ""treat.dum_fac"","
"0","   group.test = TRUE, # Request group comparison tests (defaults likely appropriate)"
"0","   # factor.numeric = TRUE, # Treat factors numerically (important for 0/1 outcomes)"
"0","   # Using mean(x)*100 might make factor.numeric redundant or problematic, test this."
"0","   # Let's omit factor.numeric first, as mean() should work on 0/1."
"0","   digits = 2, # Digits for the calculated percentages"
"0","   # group.test options from original (may need tweaks for non-latex)"
"0","   # group.test=list(digits=2, star.cutoffs = c(0.1, 0.05, 0.01), star.markers = c(""†"", ""*"", ""**"", ""***"")),"
"0","   group.weights = ""wt3"","
"0","   labels = business_labs,"
"0","   title = ""Key Business Outcomes by Treatment Group (Wave 3) - vtable Replication"","
"0","   note = ""Percentages calculated using Wave 3 inverse probability weights (wt3) via vtable. Significance levels from vtable default test: † p<0.1, * p<0.05, ** p<0.01, *** p<0.001"","
"0","   # anchor = ""tab:table1-vtable"", # Optional anchor for cross-referencing"
"0","   file = ""../output/table1_vtable_replication.html"" # Save as HTML for inspection"
"0","   # out = 'kable' # Try rendering as kable for better Rmd integration"
"0","   # If out='kable' doesn't work well with footnotes/styling, we remove it and let st print HTML/default"
"0",")"
"2","Warning: Factor variables ignore custom summ options. Cols 1 and 2 are count and percentage.
Beware combining factors with a custom summ unless factor.numeric = TRUE."
"2","Warning: cannot open file '../output/table1_vtable_replication.html': No such file or directory"
"2","Error in file(con, ""w"") : cannot open the connection
"
